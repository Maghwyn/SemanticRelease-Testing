name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  automatic_version_release:
    name: Automatic Version Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Node.js Dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Touch
        run: |
          touch test.js
          echo "const a = 10" > test.js
      - name: Set Semantic Release Version (hacky)
        run: |
          RELEASE_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Releasing on version
        run: echo ${{ env.RELEASE_VERSION }}
      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Android Debug APK
        run: gh release upload v${{ env.RELEASE_VERSION }} test.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ------------------------------------------------------------------
  # Does not work, i'm unsure how to pass the dynamic var between jobs
  # ------------------------------------------------------------------

  # publish_android_debug_apk_release:
  #   name: Automatic Android Debug APK Publish Release
  #   runs-on: ubuntu-latest
  #   if: ${{ needs.automatic_version_release.result == 'success' }}
  #   needs: [automatic_version_release]
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #     - name: Setup Node.js v20
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #     - name: Download test.js artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: android-debug-apk-artifact
  #     - name: Publish APK
  #       run: gh release upload v${{ env.RELEASE_VERSION }} app-debug.apk
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}